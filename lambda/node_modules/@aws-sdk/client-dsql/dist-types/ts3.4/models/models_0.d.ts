import { ExceptionOptionType as __ExceptionOptionType } from "@smithy/smithy-client";
import { DSQLServiceException as __BaseException } from "./DSQLServiceException";
export declare class AccessDeniedException extends __BaseException {
  readonly name: "AccessDeniedException";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<AccessDeniedException, __BaseException>
  );
}
export declare const ClusterStatus: {
  readonly ACTIVE: "ACTIVE";
  readonly CREATING: "CREATING";
  readonly DELETED: "DELETED";
  readonly DELETING: "DELETING";
  readonly FAILED: "FAILED";
  readonly IDLE: "IDLE";
  readonly INACTIVE: "INACTIVE";
  readonly PENDING_DELETE: "PENDING_DELETE";
  readonly PENDING_SETUP: "PENDING_SETUP";
  readonly UPDATING: "UPDATING";
};
export type ClusterStatus = (typeof ClusterStatus)[keyof typeof ClusterStatus];
export declare class ConflictException extends __BaseException {
  readonly name: "ConflictException";
  readonly $fault: "client";
  resourceId?: string | undefined;
  resourceType?: string | undefined;
  constructor(opts: __ExceptionOptionType<ConflictException, __BaseException>);
}
export interface MultiRegionProperties {
  witnessRegion?: string | undefined;
  clusters?: string[] | undefined;
}
export interface CreateClusterInput {
  deletionProtectionEnabled?: boolean | undefined;
  kmsEncryptionKey?: string | undefined;
  tags?: Record<string, string> | undefined;
  clientToken?: string | undefined;
  multiRegionProperties?: MultiRegionProperties | undefined;
}
export declare const EncryptionStatus: {
  readonly ENABLED: "ENABLED";
  readonly ENABLING: "ENABLING";
  readonly KMS_KEY_INACCESSIBLE: "KMS_KEY_INACCESSIBLE";
  readonly UPDATING: "UPDATING";
};
export type EncryptionStatus =
  (typeof EncryptionStatus)[keyof typeof EncryptionStatus];
export declare const EncryptionType: {
  readonly AWS_OWNED_KMS_KEY: "AWS_OWNED_KMS_KEY";
  readonly CUSTOMER_MANAGED_KMS_KEY: "CUSTOMER_MANAGED_KMS_KEY";
};
export type EncryptionType =
  (typeof EncryptionType)[keyof typeof EncryptionType];
export interface EncryptionDetails {
  encryptionType: EncryptionType | undefined;
  kmsKeyArn?: string | undefined;
  encryptionStatus: EncryptionStatus | undefined;
}
export interface CreateClusterOutput {
  identifier: string | undefined;
  arn: string | undefined;
  status: ClusterStatus | undefined;
  creationTime: Date | undefined;
  multiRegionProperties?: MultiRegionProperties | undefined;
  encryptionDetails?: EncryptionDetails | undefined;
  deletionProtectionEnabled: boolean | undefined;
}
export declare class InternalServerException extends __BaseException {
  readonly name: "InternalServerException";
  readonly $fault: "server";
  $retryable: {};
  retryAfterSeconds?: number | undefined;
  constructor(
    opts: __ExceptionOptionType<InternalServerException, __BaseException>
  );
}
export declare class ServiceQuotaExceededException extends __BaseException {
  readonly name: "ServiceQuotaExceededException";
  readonly $fault: "client";
  resourceId: string | undefined;
  resourceType: string | undefined;
  serviceCode: string | undefined;
  quotaCode: string | undefined;
  constructor(
    opts: __ExceptionOptionType<ServiceQuotaExceededException, __BaseException>
  );
}
export declare class ThrottlingException extends __BaseException {
  readonly name: "ThrottlingException";
  readonly $fault: "client";
  $retryable: {
    throttling: boolean;
  };
  serviceCode?: string | undefined;
  quotaCode?: string | undefined;
  retryAfterSeconds?: number | undefined;
  constructor(
    opts: __ExceptionOptionType<ThrottlingException, __BaseException>
  );
}
export interface ValidationExceptionField {
  name: string | undefined;
  message: string | undefined;
}
export declare const ValidationExceptionReason: {
  readonly CANNOT_PARSE: "cannotParse";
  readonly DELETION_PROTECTION_ENABLED: "deletionProtectionEnabled";
  readonly FIELD_VALIDATION_FAILED: "fieldValidationFailed";
  readonly OTHER: "other";
  readonly UNKNOWN_OPERATION: "unknownOperation";
};
export type ValidationExceptionReason =
  (typeof ValidationExceptionReason)[keyof typeof ValidationExceptionReason];
export declare class ValidationException extends __BaseException {
  readonly name: "ValidationException";
  readonly $fault: "client";
  reason: ValidationExceptionReason | undefined;
  fieldList?: ValidationExceptionField[] | undefined;
  constructor(
    opts: __ExceptionOptionType<ValidationException, __BaseException>
  );
}
export interface DeleteClusterInput {
  identifier: string | undefined;
  clientToken?: string | undefined;
}
export interface DeleteClusterOutput {
  identifier: string | undefined;
  arn: string | undefined;
  status: ClusterStatus | undefined;
  creationTime: Date | undefined;
}
export declare class ResourceNotFoundException extends __BaseException {
  readonly name: "ResourceNotFoundException";
  readonly $fault: "client";
  resourceId: string | undefined;
  resourceType: string | undefined;
  constructor(
    opts: __ExceptionOptionType<ResourceNotFoundException, __BaseException>
  );
}
export interface GetClusterInput {
  identifier: string | undefined;
}
export interface GetClusterOutput {
  identifier: string | undefined;
  arn: string | undefined;
  status: ClusterStatus | undefined;
  creationTime: Date | undefined;
  deletionProtectionEnabled: boolean | undefined;
  multiRegionProperties?: MultiRegionProperties | undefined;
  tags?: Record<string, string> | undefined;
  encryptionDetails?: EncryptionDetails | undefined;
}
export interface GetVpcEndpointServiceNameInput {
  identifier: string | undefined;
}
export interface GetVpcEndpointServiceNameOutput {
  serviceName: string | undefined;
}
export interface ListClustersInput {
  maxResults?: number | undefined;
  nextToken?: string | undefined;
}
export interface ClusterSummary {
  identifier: string | undefined;
  arn: string | undefined;
}
export interface ListClustersOutput {
  nextToken?: string | undefined;
  clusters: ClusterSummary[] | undefined;
}
export interface UpdateClusterInput {
  identifier: string | undefined;
  deletionProtectionEnabled?: boolean | undefined;
  kmsEncryptionKey?: string | undefined;
  clientToken?: string | undefined;
  multiRegionProperties?: MultiRegionProperties | undefined;
}
export interface UpdateClusterOutput {
  identifier: string | undefined;
  arn: string | undefined;
  status: ClusterStatus | undefined;
  creationTime: Date | undefined;
}
export interface ListTagsForResourceInput {
  resourceArn: string | undefined;
}
export interface ListTagsForResourceOutput {
  tags?: Record<string, string> | undefined;
}
export interface TagResourceInput {
  resourceArn: string | undefined;
  tags: Record<string, string> | undefined;
}
export interface UntagResourceInput {
  resourceArn: string | undefined;
  tagKeys: string[] | undefined;
}
